name: Publish to npm & GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Extract version
        id: package-version
        # Pull the version field from package.json for later use (tagging & duplicate publishing check)
        run: |
          # store the version from package.json in a shell variable
          VERSION=$(node -p "require('./package.json').version")
          # export it for use in the next jobs
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Check if the version already exists on NPMJS
        id: check-version
        shell: bash
        run: |
          if npm view eslint-plugin-calm-comments@${{ steps['package-version'].outputs.version }} version > /dev/null 2>&1; then
            echo "published=true" >> "$GITHUB_OUTPUT"
          else
            echo "published=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish package (via NPM)
        if: steps.check-version.outputs.published == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          # GitHub exposes it as steps.<step_id>.outputs.version, but if <step_id> has a dash you must write steps['step-id'], not steps.['step-id'].
          tag_name: v${{ steps['package-version'].outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  pages:
    needs: release
    permissions:
      id-token: write
      contents: read
      pages: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build (Markdown to HTML conversion)
        uses: actions/jekyll-build-pages@v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4